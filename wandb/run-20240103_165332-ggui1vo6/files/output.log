Some weights of RobertaForSequenceClassification were not initialized from the model checkpoint at roberta-large and are newly initialized: ['classifier.out_proj.weight', 'classifier.dense.bias', 'classifier.out_proj.bias', 'classifier.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.

  0%|                                                                                       | 0/4000 [00:00<?, ?it/s]You're using a RobertaTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.













































































































































































 10%|███████▋                                                                     | 400/4000 [06:02<51:18,  1.17it/s]






 84%|███████████████████████████████████████████████████████████████████▏            | 21/25 [00:10<00:02,  1.87it/s]











































 12%|█████████▌                                                                   | 499/4000 [07:41<50:03,  1.17it/s]































































































































 20%|███████████████▍                                                             | 800/4000 [12:01<46:53,  1.14it/s]






 92%|█████████████████████████████████████████████████████████████████████████▌      | 23/25 [00:11<00:01,  1.89it/s]



 20%|███████████████▏                                                           | 807/4000 [12:21<1:12:44,  1.37s/it]Traceback (most recent call last):
  File "/data/2_data_server/nlp-04/lost_technology/test.py", line 113, in <module>
    trainer.train()
  File "/home/nlp-04/anaconda3/envs/kkm/lib/python3.10/site-packages/transformers/trainer.py", line 1591, in train
    return inner_training_loop(
  File "/home/nlp-04/anaconda3/envs/kkm/lib/python3.10/site-packages/transformers/trainer.py", line 1892, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs)
  File "/home/nlp-04/anaconda3/envs/kkm/lib/python3.10/site-packages/transformers/trainer.py", line 2776, in training_step
    loss = self.compute_loss(model, inputs)
  File "/home/nlp-04/anaconda3/envs/kkm/lib/python3.10/site-packages/transformers/trainer.py", line 2801, in compute_loss
    outputs = model(**inputs)
  File "/home/nlp-04/anaconda3/envs/kkm/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/nlp-04/anaconda3/envs/kkm/lib/python3.10/site-packages/torch/nn/parallel/data_parallel.py", line 170, in forward
    replicas = self.replicate(self.module, self.device_ids[:len(inputs)])
  File "/home/nlp-04/anaconda3/envs/kkm/lib/python3.10/site-packages/torch/nn/parallel/data_parallel.py", line 175, in replicate
    return replicate(module, device_ids, not torch.is_grad_enabled())
  File "/home/nlp-04/anaconda3/envs/kkm/lib/python3.10/site-packages/torch/nn/parallel/replicate.py", line 91, in replicate
    param_copies = _broadcast_coalesced_reshape(params, devices, detach)
  File "/home/nlp-04/anaconda3/envs/kkm/lib/python3.10/site-packages/torch/nn/parallel/replicate.py", line 71, in _broadcast_coalesced_reshape
    tensor_copies = Broadcast.apply(devices, *tensors)
  File "/home/nlp-04/anaconda3/envs/kkm/lib/python3.10/site-packages/torch/nn/parallel/_functions.py", line 23, in forward
    outputs = comm.broadcast_coalesced(inputs, ctx.target_gpus)
  File "/home/nlp-04/anaconda3/envs/kkm/lib/python3.10/site-packages/torch/nn/parallel/comm.py", line 58, in broadcast_coalesced
    return torch._C._broadcast_coalesced(tensors, devices, buffer_size)
KeyboardInterrupt